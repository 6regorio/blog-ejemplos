/**
 * This class is generated by jOOQ
 */
package io.github.picodotdev.gradle.core.models.tables;


import io.github.picodotdev.gradle.core.models.Gradle;
import io.github.picodotdev.gradle.core.models.Keys;
import io.github.picodotdev.gradle.core.models.tables.records.ItemRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Item extends TableImpl<ItemRecord> {

	private static final long serialVersionUID = 1515205274;

	/**
	 * The reference instance of <code>gradle.item</code>
	 */
	public static final Item ITEM = new Item();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ItemRecord> getRecordType() {
		return ItemRecord.class;
	}

	/**
	 * The column <code>gradle.item.id</code>.
	 */
	public final TableField<ItemRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>gradle.item.dateCreate</code>.
	 */
	public final TableField<ItemRecord, Timestamp> DATECREATE = createField("dateCreate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>gradle.item.name</code>.
	 */
	public final TableField<ItemRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>gradle.item.stock</code>.
	 */
	public final TableField<ItemRecord, Long> STOCK = createField("stock", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>gradle.item</code> table reference
	 */
	public Item() {
		this("item", null);
	}

	/**
	 * Create an aliased <code>gradle.item</code> table reference
	 */
	public Item(String alias) {
		this(alias, ITEM);
	}

	private Item(String alias, Table<ItemRecord> aliased) {
		this(alias, aliased, null);
	}

	private Item(String alias, Table<ItemRecord> aliased, Field<?>[] parameters) {
		super(alias, Gradle.GRADLE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ItemRecord, Long> getIdentity() {
		return Keys.IDENTITY_ITEM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ItemRecord> getPrimaryKey() {
		return Keys.PK_ITEM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ItemRecord>> getKeys() {
		return Arrays.<UniqueKey<ItemRecord>>asList(Keys.PK_ITEM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Item as(String alias) {
		return new Item(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Item rename(String name) {
		return new Item(name, null);
	}
}
