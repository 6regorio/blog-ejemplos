/*
 * This file is generated by jOOQ.
 */
package io.github.picodotdev.plugintapestry.entities.jooq;


import io.github.picodotdev.plugintapestry.entities.jooq.tables.Producto;
import io.github.picodotdev.plugintapestry.entities.jooq.tables.records.ProductoRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PLUGINTAPESTRY</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ProductoRecord, Long> IDENTITY_PRODUCTO = Identities0.IDENTITY_PRODUCTO;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ProductoRecord> PK_PRODUCTO = UniqueKeys0.PK_PRODUCTO;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ProductoRecord, Long> IDENTITY_PRODUCTO = Internal.createIdentity(Producto.PRODUCTO, Producto.PRODUCTO.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ProductoRecord> PK_PRODUCTO = Internal.createUniqueKey(Producto.PRODUCTO, "PK_PRODUCTO", Producto.PRODUCTO.ID);
    }
}
