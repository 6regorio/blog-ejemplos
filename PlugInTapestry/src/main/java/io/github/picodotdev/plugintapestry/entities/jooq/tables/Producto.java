/*
 * This file is generated by jOOQ.
 */
package io.github.picodotdev.plugintapestry.entities.jooq.tables;


import io.github.picodotdev.plugintapestry.entities.jooq.Indexes;
import io.github.picodotdev.plugintapestry.entities.jooq.Keys;
import io.github.picodotdev.plugintapestry.entities.jooq.Plugintapestry;
import io.github.picodotdev.plugintapestry.entities.jooq.tables.records.ProductoRecord;
import io.github.picodotdev.plugintapestry.misc.TimestampConverter;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Producto extends TableImpl<ProductoRecord> {

    private static final long serialVersionUID = -208887133;

    /**
     * The reference instance of <code>PLUGINTAPESTRY.PRODUCTO</code>
     */
    public static final Producto PRODUCTO = new Producto();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductoRecord> getRecordType() {
        return ProductoRecord.class;
    }

    /**
     * The column <code>PLUGINTAPESTRY.PRODUCTO.ID</code>.
     */
    public final TableField<ProductoRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>PLUGINTAPESTRY.PRODUCTO.NOMBRE</code>.
     */
    public final TableField<ProductoRecord, String> NOMBRE = createField("NOMBRE", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>PLUGINTAPESTRY.PRODUCTO.DESCRIPCION</code>.
     */
    public final TableField<ProductoRecord, String> DESCRIPCION = createField("DESCRIPCION", org.jooq.impl.SQLDataType.VARCHAR(5000).nullable(false), this, "");

    /**
     * The column <code>PLUGINTAPESTRY.PRODUCTO.CANTIDAD</code>.
     */
    public final TableField<ProductoRecord, Long> CANTIDAD = createField("CANTIDAD", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>PLUGINTAPESTRY.PRODUCTO.FECHA</code>.
     */
    public final TableField<ProductoRecord, LocalDateTime> FECHA = createField("FECHA", org.jooq.impl.SQLDataType.TIMESTAMP.precision(26), this, "", new TimestampConverter());

    /**
     * Create a <code>PLUGINTAPESTRY.PRODUCTO</code> table reference
     */
    public Producto() {
        this(DSL.name("PRODUCTO"), null);
    }

    /**
     * Create an aliased <code>PLUGINTAPESTRY.PRODUCTO</code> table reference
     */
    public Producto(String alias) {
        this(DSL.name(alias), PRODUCTO);
    }

    /**
     * Create an aliased <code>PLUGINTAPESTRY.PRODUCTO</code> table reference
     */
    public Producto(Name alias) {
        this(alias, PRODUCTO);
    }

    private Producto(Name alias, Table<ProductoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Producto(Name alias, Table<ProductoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Producto(Table<O> child, ForeignKey<O, ProductoRecord> key) {
        super(child, key, PRODUCTO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Plugintapestry.PLUGINTAPESTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductoRecord, Long> getIdentity() {
        return Keys.IDENTITY_PRODUCTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductoRecord> getPrimaryKey() {
        return Keys.PK_PRODUCTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductoRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductoRecord>>asList(Keys.PK_PRODUCTO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Producto as(String alias) {
        return new Producto(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Producto as(Name alias) {
        return new Producto(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Producto rename(String name) {
        return new Producto(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Producto rename(Name name) {
        return new Producto(name, null);
    }
}
